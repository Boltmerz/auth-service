{"version":3,"sources":["../../src/utils/hash.js"],"names":["SALT_ROUNDS","hash","plainText","bcrypt","hashed","validateHash","hashedPassword","compare","isSamePassword"],"mappings":";;;;;;;;;;;;;;AAAA;;AAEA,IAAMA,WAAW,GAAG,EAApB;;SAEsBC,I;;;;;wFAAf,iBAAoBC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACgBC,mBAAOF,IAAP,CAAYC,SAAZ,EAAuBF,WAAvB,CADhB;;AAAA;AACCI,YAAAA,MADD;AAAA,6CAEEA,MAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAKeC,Y;;;;;gGAAf,kBAA4BH,SAA5B,EAAuCI,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBH,mBAAOI,OAAP,CAAeL,SAAf,EAA0BI,cAA1B,CADxB;;AAAA;AACCE,YAAAA,cADD;AAAA,8CAEEA,cAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import bcrypt from 'bcrypt';\n\nconst SALT_ROUNDS = 11;\n\nexport async function hash(plainText) {\n  const hashed = await bcrypt.hash(plainText, SALT_ROUNDS);\n  return hashed;\n}\n\nexport async function validateHash(plainText, hashedPassword) {\n  const isSamePassword = await bcrypt.compare(plainText, hashedPassword);\n  return isSamePassword;\n}\n"],"file":"hash.js"}